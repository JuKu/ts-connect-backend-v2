# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
executors:
  ci-node:
    docker:
      - image: cimg/node:17.4.0
      - image: circleci/mongo:latest
        # port: 27017:27017
        environment:
          MONGO_INITDB_ROOT_USERNAME: myUser
          MONGO_INITDB_ROOT_PASSWORD: myPass
    working_directory: ~/ts-connect-backend

jobs:
  build-and-test:
    executor: ci-node
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    #docker:
    #  - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      # Restore local dependencies from cache
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
            - v1-dependencies-
      # Install project dependencies
      - run:
          name: Install local dependencies
          command: npm install
      - run:
          name: Download sonar-scanner
          command:  |
            export SONAR_SCANNER_VERSION=4.4.0.2170
            export SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux
            curl --create-dirs -sSLo $HOME/.sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux.zip
            unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
            export PATH=$SONAR_SCANNER_HOME/bin:$PATH
            export SONAR_SCANNER_OPTS="-server"
      #- run:
      #    name: Install NestJS CLI
      #    command: npm install -g @nestjs/cli
      # Cache local dependencies if they don't exist
      - save_cache:
          key: v1-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
            - $HOME/.sonar
      # Lint the source code
      - run:
          name: Linting
          command: npm run lint
      # Test the source code
      #- run:
      #    name: Install jest globally
      #    command: npm install jest -g
      - run:
          name: Testing
          command: npm run test:ci-cov
      - run:
          name: Run e2e tests
          command: npm run test:e2e
      #- run:
      #    name: Fix lcov.info file
      #    command: cat coverage/lcov.info | while IFS= read -r line; do if [[ "$line" == "SF:"* ]]; then line="SF:$(realpath "${line#SF:}")"; fi; echo "$line"; done > /tmp/lcov.info
      #- run:
      #    name: Move correct lcov file
      #    command: mv /tmp/lcov.info coverage/lcov.info
      - sonarcloud/scan
      - persist_to_workspace:
          root: .
          paths:
            - .
  deploy:
    executor: ci-node
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: .
      - setup_remote_docker:
          version: 20.10.6
      - run:
          name: Build docker image for web-api
          command: docker build --target production -t jukusoft/ts-connect-webapi:${CIRCLE_BRANCH}-latest -f Dockerfile .
      - run:
          name: Docker login
          command: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - run:
          name: Push docker image for web-api
          command: docker push jukusoft/ts-connect-webapi:${CIRCLE_BRANCH}-latest
  release:
    executor: ci-node
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: .
      - setup_remote_docker:
          version: 20.10.6
      - run:
          name: Create release tag
          command: docker tag jukusoft/ts-connect-webapi:${CIRCLE_BRANCH}-latest jukusoft/ts-connect-webapi:${CIRCLE_TAG}
      - run:
          name: Push release to Docker Hub
          command: docker push jukusoft/ts-connect-webapi:${CIRCLE_TAG}

orbs:
  sonarcloud: sonarsource/sonarcloud@1.0.3
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build-and-deploy:
    jobs:
      - build-and-test:
          context: SonarCloud
      - deploy:
          requires:
            - build-and-test
          filters:
            tags:
              #only: /.*/
              only: /^v[0-9]+(\.[0-9]+)*$/
            branches:
              only:
                - deploy
                - v*
      - release:
          requires:
            - deploy
          filters:
            tags:
              #only: /.*/
              only: /^v[0-9]+(\.[0-9]+)*$/
            branches:
              ignore: /.*/

